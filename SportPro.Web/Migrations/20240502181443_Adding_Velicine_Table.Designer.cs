// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SportPro.Web.Data;

#nullable disable

namespace SportPro.Web.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240502181443_Adding_Velicine_Table")]
    partial class Adding_Velicine_Table
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PozicijeZaposlenici", b =>
                {
                    b.Property<int>("PozicijeIDPozicija")
                        .HasColumnType("int");

                    b.Property<int>("ZaposleniciIDZaposlenik")
                        .HasColumnType("int");

                    b.HasKey("PozicijeIDPozicija", "ZaposleniciIDZaposlenik");

                    b.HasIndex("ZaposleniciIDZaposlenik");

                    b.ToTable("PozicijeZaposlenici");
                });

            modelBuilder.Entity("SportPro.Web.Models.Domains.Boje", b =>
                {
                    b.Property<int>("IDBoja")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDBoja"));

                    b.Property<string>("NazivBoje")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDBoja");

                    b.ToTable("Boje");
                });

            modelBuilder.Entity("SportPro.Web.Models.Domains.Brendovi", b =>
                {
                    b.Property<int>("IDBrend")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDBrend"));

                    b.Property<int>("GodinaOsnivanja")
                        .HasColumnType("int");

                    b.Property<string>("NazivBrenda")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Osnivac")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Predsjednik")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sjediste")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vrsta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDBrend");

                    b.ToTable("Brendovi");
                });

            modelBuilder.Entity("SportPro.Web.Models.Domains.Natjecaji", b =>
                {
                    b.Property<int>("IDNatjecaj")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDNatjecaj"));

                    b.Property<bool>("Aktivan")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DatumObjave")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dobitnik")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProcijenjenaVrijednost")
                        .HasColumnType("int");

                    b.Property<DateTime>("TrajanjeDo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("TrajanjeOd")
                        .HasColumnType("datetime2");

                    b.HasKey("IDNatjecaj");

                    b.ToTable("Natjecaji");
                });

            modelBuilder.Entity("SportPro.Web.Models.Domains.PonudePoslova", b =>
                {
                    b.Property<int>("IDPonudaPoslova")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDPonudaPoslova"));

                    b.Property<int>("BrojOsoba")
                        .HasColumnType("int");

                    b.Property<double>("BrojSati")
                        .HasColumnType("float");

                    b.Property<double>("CijenaSata")
                        .HasColumnType("float");

                    b.Property<DateTime>("KrajRadova")
                        .HasColumnType("datetime2");

                    b.Property<string>("Lokacija")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpisPosla")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PocetakRadova")
                        .HasColumnType("datetime2");

                    b.Property<string>("PotrebnaOprema")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDPonudaPoslova");

                    b.ToTable("PonudePoslova");
                });

            modelBuilder.Entity("SportPro.Web.Models.Domains.Poslovnice", b =>
                {
                    b.Property<int>("IDPoslovnica")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDPoslovnica"));

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DatumOtvaranja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Drzava")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Grad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeSpan?>("RadnoVrijemeDo")
                        .HasColumnType("time");

                    b.Property<TimeSpan?>("RadnoVrijemeOd")
                        .HasColumnType("time");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDPoslovnica");

                    b.ToTable("Poslovnice");
                });

            modelBuilder.Entity("SportPro.Web.Models.Domains.Pozicije", b =>
                {
                    b.Property<int>("IDPozicija")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDPozicija"));

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDPozicija");

                    b.ToTable("Pozicije");
                });

            modelBuilder.Entity("SportPro.Web.Models.Domains.Pravilnici", b =>
                {
                    b.Property<int>("IDPravilnik")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDPravilnik"));

                    b.Property<bool>("Aktivan")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DatumObjavljivanja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDPravilnik");

                    b.ToTable("Pravilnici");
                });

            modelBuilder.Entity("SportPro.Web.Models.Domains.Velicine", b =>
                {
                    b.Property<int>("IDVelicina")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDVelicina"));

                    b.Property<string>("Velicina")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDVelicina");

                    b.ToTable("Velicine");
                });

            modelBuilder.Entity("SportPro.Web.Models.Domains.Zaposlenici", b =>
                {
                    b.Property<int>("IDZaposlenik")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IDZaposlenik"));

                    b.Property<string>("Adresa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrojBankovnogRacuna")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Certifikati")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DatumZaposlenja")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DatumZavrsetkaRadnogOdnosa")
                        .HasColumnType("datetime2");

                    b.Property<string>("Drzava")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Grad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JMBG")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kvalifikacija")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PoslovnicaID")
                        .HasColumnType("int");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Spol")
                        .IsRequired()
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDZaposlenik");

                    b.HasIndex("PoslovnicaID");

                    b.ToTable("Zaposlenici");
                });

            modelBuilder.Entity("PozicijeZaposlenici", b =>
                {
                    b.HasOne("SportPro.Web.Models.Domains.Pozicije", null)
                        .WithMany()
                        .HasForeignKey("PozicijeIDPozicija")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SportPro.Web.Models.Domains.Zaposlenici", null)
                        .WithMany()
                        .HasForeignKey("ZaposleniciIDZaposlenik")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SportPro.Web.Models.Domains.Zaposlenici", b =>
                {
                    b.HasOne("SportPro.Web.Models.Domains.Poslovnice", "Poslovnica")
                        .WithMany("Zaposlenici")
                        .HasForeignKey("PoslovnicaID");

                    b.Navigation("Poslovnica");
                });

            modelBuilder.Entity("SportPro.Web.Models.Domains.Poslovnice", b =>
                {
                    b.Navigation("Zaposlenici");
                });
#pragma warning restore 612, 618
        }
    }
}
